// import 
class App extends React.Component {
  constructor() {
    super();
    this.state = {
      isHidden: true,
      isHiddenCh: false
    };
  }

  toggleHidden() {
    this.setState({
      isHidden: !this.state.isHidden
    });
  }

  toggleHiddenCh() {
    this.setState({
      isHidden: !this.state.isHidden,
      isHiddenCh: this.state.isHiddenCh
    });
  }

  render() {
    return React.createElement("div", null, React.createElement("h1", null, "Mini App"), React.createElement("button", {
      onClick: this.toggleHidden.bind(this)
    }, "Checkout"), !this.state.isHidden && React.createElement(Form1, {
      to: this.toggleHiddenCh.bind(this)
    }));
  }

}

class Form1 extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      isHidden: true,
      fullName: '',
      password: '',
      email: ''
    };
  }

  fullName(e) {
    this.setState({
      fullName: e.target.value
    });
  }

  password(e) {
    this.setState({
      password: e.target.value
    });
  }

  email(e) {
    this.setState({
      email: e.target.value
    });
  }

  toggleHidden() {
    this.setState({
      isHidden: !this.state.isHidden
    });
  }

  onClick(e) {
    e.preventDefault();
    var data = {
      fullname: this.state.fullName,
      email: this.state.email,
      pass: this.state.password
    };
    console.log(data);
  }

  render() {
    return React.createElement("div", {
      className: "modal"
    }, React.createElement("div", {
      id: "form1"
    }, React.createElement("form", null, "Full Name:", React.createElement("input", {
      type: "text",
      onChange: this.fullName.bind(this),
      id: "firstname",
      placeholder: "Ahmad",
      required: true
    }), "Email:", React.createElement("input", {
      type: "email",
      onChange: this.email.bind(this),
      id: "email",
      size: "30",
      maxLength: "30",
      placeholder: "default@example.com",
      required: true
    }), "Password:", React.createElement("input", {
      type: "password",
      onChange: this.password.bind(this),
      id: "password",
      required: true
    }), React.createElement("button", {
      onClick: this.onClick.bind(this)
    }, "Submit"), React.createElement("button", {
      onClick: this.toggleHidden.bind(this)
    }, "Next Form"))), !this.state.isHidden && React.createElement(Form2, null));
  }

}

class Form2 extends React.Component {
  render() {
    return React.createElement("div", null, React.createElement("h2", null, "Hello World"));
  }

}

ReactDOM.render(React.createElement(App, null), document.getElementById('app'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9hcHAuanN4Il0sIm5hbWVzIjpbIkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJzdGF0ZSIsImlzSGlkZGVuIiwiaXNIaWRkZW5DaCIsInRvZ2dsZUhpZGRlbiIsInNldFN0YXRlIiwidG9nZ2xlSGlkZGVuQ2giLCJyZW5kZXIiLCJiaW5kIiwiRm9ybTEiLCJwcm9wcyIsImZ1bGxOYW1lIiwicGFzc3dvcmQiLCJlbWFpbCIsImUiLCJ0YXJnZXQiLCJ2YWx1ZSIsIm9uQ2xpY2siLCJwcmV2ZW50RGVmYXVsdCIsImRhdGEiLCJmdWxsbmFtZSIsInBhc3MiLCJjb25zb2xlIiwibG9nIiwiRm9ybTIiLCJSZWFjdERPTSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsR0FBTixTQUFrQkMsS0FBSyxDQUFDQyxTQUF4QixDQUFrQztBQUM5QkMsRUFBQUEsV0FBVyxHQUFHO0FBQ1Y7QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFDVEMsTUFBQUEsUUFBUSxFQUFFLElBREQ7QUFFVEMsTUFBQUEsVUFBVSxFQUFDO0FBRkYsS0FBYjtBQUlIOztBQUNEQyxFQUFBQSxZQUFZLEdBQUk7QUFDWixTQUFLQyxRQUFMLENBQWM7QUFDVkgsTUFBQUEsUUFBUSxFQUFFLENBQUMsS0FBS0QsS0FBTCxDQUFXQztBQURaLEtBQWQ7QUFHSDs7QUFDREksRUFBQUEsY0FBYyxHQUFFO0FBQ1osU0FBS0QsUUFBTCxDQUFjO0FBQ1ZILE1BQUFBLFFBQVEsRUFBRSxDQUFDLEtBQUtELEtBQUwsQ0FBV0MsUUFEWjtBQUVWQyxNQUFBQSxVQUFVLEVBQUMsS0FBS0YsS0FBTCxDQUFXRTtBQUZaLEtBQWQ7QUFJSDs7QUFFREksRUFBQUEsTUFBTSxHQUFJO0FBQ04sV0FDQSxpQ0FDSSwyQ0FESixFQUVJO0FBQVEsTUFBQSxPQUFPLEVBQUUsS0FBS0gsWUFBTCxDQUFrQkksSUFBbEIsQ0FBdUIsSUFBdkI7QUFBakIsa0JBRkosRUFHSyxDQUFDLEtBQUtQLEtBQUwsQ0FBV0MsUUFBWixJQUF3QixvQkFBQyxLQUFEO0FBQU8sTUFBQSxFQUFFLEVBQUUsS0FBS0ksY0FBTCxDQUFvQkUsSUFBcEIsQ0FBeUIsSUFBekI7QUFBWCxNQUg3QixDQURBO0FBTUY7O0FBM0I0Qjs7QUE4QmxDLE1BQU1DLEtBQU4sU0FBb0JYLEtBQUssQ0FBQ0MsU0FBMUIsQ0FBb0M7QUFDaENDLEVBQUFBLFdBQVcsQ0FBQ1UsS0FBRCxFQUFRO0FBQ2YsVUFBTUEsS0FBTjtBQUNBLFNBQUtULEtBQUwsR0FBYTtBQUNUQyxNQUFBQSxRQUFRLEVBQUUsSUFERDtBQUVUUyxNQUFBQSxRQUFRLEVBQUMsRUFGQTtBQUdUQyxNQUFBQSxRQUFRLEVBQUMsRUFIQTtBQUlUQyxNQUFBQSxLQUFLLEVBQUM7QUFKRyxLQUFiO0FBTUg7O0FBQ0RGLEVBQUFBLFFBQVEsQ0FBQ0csQ0FBRCxFQUFHO0FBQ1AsU0FBS1QsUUFBTCxDQUFjO0FBQ1ZNLE1BQUFBLFFBQVEsRUFBQ0csQ0FBQyxDQUFDQyxNQUFGLENBQVNDO0FBRFIsS0FBZDtBQUdIOztBQUNESixFQUFBQSxRQUFRLENBQUNFLENBQUQsRUFBRztBQUNQLFNBQUtULFFBQUwsQ0FBYztBQUNWTyxNQUFBQSxRQUFRLEVBQUNFLENBQUMsQ0FBQ0MsTUFBRixDQUFTQztBQURSLEtBQWQ7QUFHSDs7QUFDREgsRUFBQUEsS0FBSyxDQUFDQyxDQUFELEVBQUc7QUFDSixTQUFLVCxRQUFMLENBQWM7QUFDVlEsTUFBQUEsS0FBSyxFQUFDQyxDQUFDLENBQUNDLE1BQUYsQ0FBU0M7QUFETCxLQUFkO0FBR0g7O0FBQ0RaLEVBQUFBLFlBQVksR0FBSTtBQUNaLFNBQUtDLFFBQUwsQ0FBYztBQUNWSCxNQUFBQSxRQUFRLEVBQUUsQ0FBQyxLQUFLRCxLQUFMLENBQVdDO0FBRFosS0FBZDtBQUdIOztBQUNEZSxFQUFBQSxPQUFPLENBQUNILENBQUQsRUFBRztBQUNOQSxJQUFBQSxDQUFDLENBQUNJLGNBQUY7QUFFQSxRQUFJQyxJQUFJLEdBQUM7QUFDTEMsTUFBQUEsUUFBUSxFQUFFLEtBQUtuQixLQUFMLENBQVdVLFFBRGhCO0FBRUxFLE1BQUFBLEtBQUssRUFBQyxLQUFLWixLQUFMLENBQVdZLEtBRlo7QUFHTFEsTUFBQUEsSUFBSSxFQUFDLEtBQUtwQixLQUFMLENBQVdXO0FBSFgsS0FBVDtBQUtBVSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosSUFBWjtBQUNIOztBQUNEWixFQUFBQSxNQUFNLEdBQUU7QUFDSixXQUNBO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixPQUVFO0FBQUssTUFBQSxFQUFFLEVBQUM7QUFBUixPQUNFLGdEQUVJO0FBQU8sTUFBQSxJQUFJLEVBQUMsTUFBWjtBQUFtQixNQUFBLFFBQVEsRUFBRSxLQUFLSSxRQUFMLENBQWNILElBQWQsQ0FBbUIsSUFBbkIsQ0FBN0I7QUFBc0QsTUFBQSxFQUFFLEVBQUMsV0FBekQ7QUFBcUUsTUFBQSxXQUFXLEVBQUcsT0FBbkY7QUFBMkYsTUFBQSxRQUFRO0FBQW5HLE1BRkosWUFJSTtBQUFPLE1BQUEsSUFBSSxFQUFDLE9BQVo7QUFBb0IsTUFBQSxRQUFRLEVBQUUsS0FBS0ssS0FBTCxDQUFXTCxJQUFYLENBQWdCLElBQWhCLENBQTlCO0FBQW9ELE1BQUEsRUFBRSxFQUFDLE9BQXZEO0FBQStELE1BQUEsSUFBSSxFQUFDLElBQXBFO0FBQXlFLE1BQUEsU0FBUyxFQUFDLElBQW5GO0FBQXlGLE1BQUEsV0FBVyxFQUFHLHFCQUF2RztBQUE2SCxNQUFBLFFBQVE7QUFBckksTUFKSixlQU1JO0FBQU8sTUFBQSxJQUFJLEVBQUMsVUFBWjtBQUFzQixNQUFBLFFBQVEsRUFBRSxLQUFLSSxRQUFMLENBQWNKLElBQWQsQ0FBbUIsSUFBbkIsQ0FBaEM7QUFBMEQsTUFBQSxFQUFFLEVBQUMsVUFBN0Q7QUFBeUUsTUFBQSxRQUFRO0FBQWpGLE1BTkosRUFPSTtBQUFRLE1BQUEsT0FBTyxFQUFFLEtBQUtTLE9BQUwsQ0FBYVQsSUFBYixDQUFrQixJQUFsQjtBQUFqQixnQkFQSixFQVFJO0FBQVEsTUFBQSxPQUFPLEVBQUUsS0FBS0osWUFBTCxDQUFrQkksSUFBbEIsQ0FBdUIsSUFBdkI7QUFBakIsbUJBUkosQ0FERixDQUZGLEVBY0csQ0FBQyxLQUFLUCxLQUFMLENBQVdDLFFBQVosSUFBd0Isb0JBQUMsS0FBRCxPQWQzQixDQURBO0FBa0JIOztBQTNEK0I7O0FBNkRwQyxNQUFNc0IsS0FBTixTQUFvQjFCLEtBQUssQ0FBQ0MsU0FBMUIsQ0FBb0M7QUFDaENRLEVBQUFBLE1BQU0sR0FBRTtBQUNKLFdBQ0ksaUNBQ0ksOENBREosQ0FESjtBQUtIOztBQVArQjs7QUFVcENrQixRQUFRLENBQUNsQixNQUFULENBQWdCLG9CQUFDLEdBQUQsT0FBaEIsRUFBeUJtQixRQUFRLENBQUNDLGNBQVQsQ0FBd0IsS0FBeEIsQ0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgXG5cbmNsYXNzIEFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7IFxuICAgICAgICAgICAgaXNIaWRkZW46IHRydWUsXG4gICAgICAgICAgICBpc0hpZGRlbkNoOmZhbHNlXG4gICAgICAgIH1cbiAgICB9XG4gICAgdG9nZ2xlSGlkZGVuICgpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBpc0hpZGRlbjogIXRoaXMuc3RhdGUuaXNIaWRkZW5cbiAgICAgICAgfSlcbiAgICB9XG4gICAgdG9nZ2xlSGlkZGVuQ2goKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBpc0hpZGRlbiA6IXRoaXMuc3RhdGUuaXNIaWRkZW4sXG4gICAgICAgICAgICBpc0hpZGRlbkNoOnRoaXMuc3RhdGUuaXNIaWRkZW5DaCBcbiAgICAgICAgfSkgXG4gICAgfVxuXG4gICAgcmVuZGVyICgpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdj4gXG4gICAgICAgICAgICA8aDE+TWluaSBBcHA8L2gxPlxuICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnRvZ2dsZUhpZGRlbi5iaW5kKHRoaXMpfT5DaGVja291dDwvYnV0dG9uPlxuICAgICAgICAgICAgeyF0aGlzLnN0YXRlLmlzSGlkZGVuICYmIDxGb3JtMSB0bz17dGhpcy50b2dnbGVIaWRkZW5DaC5iaW5kKHRoaXMpfS8+fVxuICAgICAgICA8L2Rpdj5cbiAgICApfVxufVxuXG5jbGFzcyBGb3JtMSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0geyBcbiAgICAgICAgICAgIGlzSGlkZGVuOiB0cnVlLFxuICAgICAgICAgICAgZnVsbE5hbWU6JycsXG4gICAgICAgICAgICBwYXNzd29yZDonJyxcbiAgICAgICAgICAgIGVtYWlsOicnXG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVsbE5hbWUoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZnVsbE5hbWU6ZS50YXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG4gICAgcGFzc3dvcmQoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcGFzc3dvcmQ6ZS50YXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG4gICAgZW1haWwoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZW1haWw6ZS50YXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG4gICAgdG9nZ2xlSGlkZGVuICgpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBpc0hpZGRlbjogIXRoaXMuc3RhdGUuaXNIaWRkZW5cbiAgICAgICAgfSlcbiAgICB9XG4gICAgb25DbGljayhlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIHZhciBkYXRhPXtcbiAgICAgICAgICAgIGZ1bGxuYW1lOiB0aGlzLnN0YXRlLmZ1bGxOYW1lLFxuICAgICAgICAgICAgZW1haWw6dGhpcy5zdGF0ZS5lbWFpbCxcbiAgICAgICAgICAgIHBhc3M6dGhpcy5zdGF0ZS5wYXNzd29yZFxuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEpXG4gICAgfVxuICAgIHJlbmRlcigpe1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbW9kYWwnPlxuICAgICAgICAgIFxuICAgICAgICAgIDxkaXYgaWQ9XCJmb3JtMVwiPlxuICAgICAgICAgICAgPGZvcm0+XG4gICAgICAgICAgICAgICAgRnVsbCBOYW1lOlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXt0aGlzLmZ1bGxOYW1lLmJpbmQodGhpcyl9aWQ9XCJmaXJzdG5hbWVcIiBwbGFjZWhvbGRlciA9IFwiQWhtYWRcIiByZXF1aXJlZC8+XG4gICAgICAgICAgICAgICAgRW1haWw6XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIG9uQ2hhbmdlPXt0aGlzLmVtYWlsLmJpbmQodGhpcyl9aWQ9XCJlbWFpbFwiIHNpemU9XCIzMFwiIG1heExlbmd0aD1cIjMwXCIgIHBsYWNlaG9sZGVyID0gXCJkZWZhdWx0QGV4YW1wbGUuY29tXCIgcmVxdWlyZWQvPlxuICAgICAgICAgICAgICAgIFBhc3N3b3JkOlxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIm9uQ2hhbmdlPXt0aGlzLnBhc3N3b3JkLmJpbmQodGhpcyl9IGlkPVwicGFzc3dvcmRcIiAgcmVxdWlyZWQvPlxuICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5vbkNsaWNrLmJpbmQodGhpcyl9ID5TdWJtaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMudG9nZ2xlSGlkZGVuLmJpbmQodGhpcyl9Pk5leHQgRm9ybTwvYnV0dG9uPlxuICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHshdGhpcy5zdGF0ZS5pc0hpZGRlbiAmJiA8Rm9ybTIvPn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5jbGFzcyBGb3JtMiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCl7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxoMj5IZWxsbyBXb3JsZDwvaDI+ICAgICAgXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuUmVhY3RET00ucmVuZGVyKDxBcHAgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHAnKSk7XG5cbiJdfQ==